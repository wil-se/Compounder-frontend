{"ast":null,"code":"import React, { useRef, useState } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar KnobArea =\n/** @class */\nfunction () {\n  function KnobArea(refElement, props) {\n    var _this = this;\n\n    this.handleOnMouseDown = function (event) {\n      _this.addWindowEventListeners('mouse');\n\n      var pageX = event.pageX,\n          pageY = event.pageY,\n          clientX = event.clientX,\n          clientY = event.clientY;\n\n      _this.updateAreaLocation({\n        pageX: pageX,\n        pageY: pageY,\n        clientX: clientX,\n        clientY: clientY\n      });\n\n      _this.updateAngleValue(pageX, pageY);\n    };\n\n    this.handleOnMouseMove = function (event) {\n      if (!_this.isInteracting) {\n        return;\n      }\n\n      var pageX = event.pageX,\n          pageY = event.pageY;\n\n      _this.updateAngleValue(pageX, pageY);\n    };\n\n    this.handleOnMouseUp = function () {\n      _this.removeWindowEventListeners('mouse');\n    };\n\n    this.handleOnTouchStart = function (event) {\n      _this.addWindowEventListeners('touch');\n\n      if ('changedTouches' in event && event.changedTouches.length === 1) {\n        var _a = event.changedTouches[0],\n            pageX = _a.pageX,\n            pageY = _a.pageY,\n            clientX = _a.clientX,\n            clientY = _a.clientY;\n\n        _this.updateAreaLocation({\n          pageX: pageX,\n          pageY: pageY,\n          clientX: clientX,\n          clientY: clientY\n        });\n\n        _this.updateAngleValue(pageX, pageY);\n      }\n    };\n\n    this.handleOnTouchMove = function (event) {\n      if (!_this.isInteracting) {\n        return;\n      }\n\n      if ('changedTouches' in event && event.changedTouches.length === 1) {\n        var _a = event.changedTouches[0],\n            pageX = _a.pageX,\n            pageY = _a.pageY;\n\n        _this.updateAngleValue(pageX, pageY);\n      }\n    };\n\n    this.handleOnTouchEnd = function () {\n      _this.removeWindowEventListeners('touch');\n    };\n\n    this.handleOnFocus = function () {\n      _this.isInteracting = true;\n    };\n\n    this.handleOnBlur = function () {\n      _this.isInteracting = false;\n    };\n\n    this.handleOnKeyDown = function (event) {\n      if (event.keyCode === 38 && _this.value + _this.step <= _this.max) {\n        _this.value += _this.step;\n        _this.angle = _this.angleFromValue(_this.value);\n      } else if (event.keyCode === 40 && _this.value - _this.step >= _this.min) {\n        _this.value -= _this.step;\n        _this.angle = _this.angleFromValue(_this.value);\n      }\n    };\n\n    this.onAngleChange = props.onAngleChange;\n    this.onValueChange = props.onValueChange;\n    this.onInteractionChange = props.onInteractionChange;\n    this._locationX = 0;\n    this._locationY = 0;\n    this.refElement = refElement;\n    this._isInteracting = false;\n    this.windowEventListeners = {\n      mouse: [['mousemove', this.handleOnMouseMove], ['mouseup', this.handleOnMouseUp]],\n      touch: [['touchmove', this.handleOnTouchMove], ['touchend', this.handleOnTouchEnd]]\n    };\n    this.updateFromProps(props);\n  }\n\n  KnobArea.prototype.updateFromProps = function (props) {\n    if (props.max <= props.min || props.max < props.min + props.step) {\n      throw new Error('Max value should be bigger or equal to min+step value.');\n    }\n\n    this.min = props.min;\n    this.max = props.max;\n    this.step = props.step;\n    this.diameter = props.diameter;\n    this.onAngleChange = props.onAngleChange || this.onAngleChange;\n    this.onValueChange = props.onValueChange || this.onValueChange;\n    this.onInteractionChange = props.onInteractionChange || this.onInteractionChange;\n    this.spaceMaxFromZero = props.spaceMaxFromZero !== undefined ? props.spaceMaxFromZero : true;\n\n    if (props.value !== this.value) {\n      if (props.min > this.value || props.value < props.min) {\n        this.value = props.min;\n      } else if (props.max < this.value || props.value > props.max) {\n        this.value = props.max;\n      } else {\n        this.value = props.value;\n      }\n\n      this.angle = this.angleFromValue(this.value);\n    }\n\n    if (this.value % this.step || (this.max - this.min) % this.step) {\n      throw new Error('Value and (max - min) should be divisible by step.');\n    }\n  };\n\n  Object.defineProperty(KnobArea.prototype, \"angle\", {\n    get: function () {\n      return this._angle;\n    },\n    set: function (val) {\n      if (this._angle === val) {\n        return;\n      }\n\n      this._angle = val;\n\n      if (this.onAngleChange) {\n        this.onAngleChange(this._angle);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(KnobArea.prototype, \"value\", {\n    get: function () {\n      return this._value;\n    },\n    set: function (val) {\n      if (this._value === val) {\n        return;\n      }\n\n      this._value = val;\n\n      if (this.onValueChange) {\n        this.onValueChange(this._value);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(KnobArea.prototype, \"isInteracting\", {\n    get: function () {\n      return this._isInteracting;\n    },\n    set: function (val) {\n      if (this._isInteracting === val) {\n        return;\n      }\n\n      this._isInteracting = val;\n\n      if (this.onInteractionChange) {\n        this.onInteractionChange(this._isInteracting);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(KnobArea.prototype, \"numSteps\", {\n    get: function () {\n      return (this.max - this.min) / this.step;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(KnobArea.prototype, \"valsDistribution\", {\n    get: function () {\n      if (this.spaceMaxFromZero) {\n        return 360 / (this.numSteps + 1);\n      }\n\n      return 360 / this.numSteps;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  KnobArea.prototype.getComputedTransformXY = function (el) {\n    if (!window.getComputedStyle || !el) {\n      return {\n        x: 0,\n        y: 0,\n        scaleX: 1,\n        scaleY: 1\n      };\n    }\n\n    var style = window.getComputedStyle(el);\n    var transform = style.transform || style.webkitTransform;\n\n    if (!transform) {\n      return {\n        x: 0,\n        y: 0,\n        scaleX: 1,\n        scaleY: 1\n      };\n    }\n\n    var mat = transform.match(/^matrix3d\\((.+)\\)$/);\n\n    if (mat) {\n      var scaleX_1 = parseFloat(mat[1].split(', ')[0]);\n      var scaleY_1 = parseFloat(mat[1].split(', ')[5]);\n      return {\n        x: parseFloat(mat[1].split(', ')[12]),\n        y: parseFloat(mat[1].split(', ')[13]),\n        scaleX: scaleX_1,\n        scaleY: scaleY_1\n      };\n    }\n\n    mat = transform.match(/^matrix\\((.+)\\)$/);\n    var scaleX = mat ? parseFloat(mat[1].split(', ')[0]) : 1;\n    var scaleY = mat ? parseFloat(mat[1].split(', ')[3]) : 1;\n    return {\n      x: mat ? parseFloat(mat[1].split(', ')[4]) : 0,\n      y: mat ? parseFloat(mat[1].split(', ')[5]) : 0,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  };\n\n  KnobArea.prototype.updateAreaLocation = function (eventCoords) {\n    var areaRadius = this.diameter / 2; // See article with explanation at: https://www.kirupa.com/html5/get_element_position_using_javascript.htm\n\n    var x = 0;\n    var y = 0;\n    var el = this.refElement.current;\n    var transformXY = this.getComputedTransformXY(el);\n\n    while (el) {\n      if (el.tagName.toUpperCase() === 'BODY') {\n        // deal with browser quirks with body/window/document and page scroll\n        var xScroll = el.scrollLeft || document.documentElement.scrollLeft;\n        var yScroll = el.scrollTop || document.documentElement.scrollTop;\n        x += el.offsetLeft - xScroll + el.clientLeft;\n        y += el.offsetTop - yScroll + el.clientTop;\n      } else {\n        // for all other non-BODY elements\n        x += el.offsetLeft - el.scrollLeft + el.clientLeft;\n        y += el.offsetTop - el.scrollTop + el.clientTop;\n      }\n\n      x += transformXY.x;\n      y += transformXY.y;\n      el = el.offsetParent;\n      transformXY = this.getComputedTransformXY(el);\n    }\n\n    this._locationX = x + areaRadius;\n    this._locationY = y + areaRadius;\n    this._locationX += eventCoords.pageX - eventCoords.clientX;\n    this._locationY += eventCoords.pageY - eventCoords.clientY;\n  };\n\n  KnobArea.prototype.calcDegreeOfRotation = function (pageX, pageY) {\n    var rad = Math.atan2(pageX - this._locationX, pageY - this._locationY);\n    var deg = Math.abs(rad * (180 / Math.PI) - 180);\n    return deg;\n  };\n\n  KnobArea.prototype.valueFromAngle = function (angle) {\n    var _this = this;\n\n    var angleAsPercent = angle / (this.numSteps * this.valsDistribution);\n    var totalValue = this.numSteps * this.step;\n    var val = this.min + angleAsPercent * totalValue;\n\n    if (val > this.max + this.step / 2) {\n      return this.min;\n    }\n\n    var valuesList = Array.from(new Array(this.numSteps + 1)).map(function (_, i) {\n      return _this.min + i * _this.step;\n    });\n    var closest = valuesList.reduce(function (prev, curr) {\n      return Math.abs(curr - val) < Math.abs(prev - val) ? curr : prev;\n    });\n    return closest;\n  };\n\n  KnobArea.prototype.angleFromValue = function (value) {\n    return Math.ceil((value - this.min) / this.step * this.valsDistribution);\n  };\n\n  KnobArea.prototype.updateAngleValue = function (pageX, pageY) {\n    var _this = this;\n\n    requestAnimationFrame(function () {\n      var updatedAngle = _this.calcDegreeOfRotation(pageX, pageY);\n\n      _this.value = _this.valueFromAngle(updatedAngle);\n      _this.angle = _this.angleFromValue(_this.value);\n    });\n  };\n\n  KnobArea.prototype.addWindowEventListeners = function (group) {\n    this.isInteracting = true;\n    this.windowEventListeners[group].forEach(function (handlerData) {\n      var eventName = handlerData[0],\n          handler = handlerData[1];\n      window.addEventListener(eventName, handler);\n    });\n  };\n\n  KnobArea.prototype.removeWindowEventListeners = function (group) {\n    this.isInteracting = false;\n    this.windowEventListeners[group].forEach(function (handlerData) {\n      var eventName = handlerData[0],\n          handler = handlerData[1];\n      window.removeEventListener(eventName, handler);\n    });\n  };\n\n  return KnobArea;\n}();\n\nfunction KnobErrorWrap(props) {\n  console && console.error(props.error);\n  return React.createElement(\"div\", {\n    style: {\n      width: props.diameter + \"px\",\n      height: props.diameter + \"px\",\n      borderRadius: props.diameter / 2 + \"px\",\n      position: 'relative',\n      outline: 'none',\n      boxSizing: 'border-box',\n      overflow: 'hidden'\n    }\n  }, React.createElement(\"div\", {\n    style: {\n      fontSize: '22px',\n      fontWeight: 'bold',\n      color: 'red',\n      textAlign: 'center',\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      zIndex: 999,\n      paddingTop: 'calc(50% - 0.5em)',\n      background: 'rgba(0, 0, 0, 0.2)',\n      pointerEvents: 'none'\n    }\n  }, \"\\uD83D\\uDCA3\"), props.children);\n}\n\nfunction useKnobAreaClass(props) {\n  var refElement = useRef(null);\n  var refKnobArea = useRef(null);\n  var errorContent = null;\n\n  try {\n    if (!refKnobArea.current) {\n      refKnobArea.current = new KnobArea(refElement, props);\n    } else {\n      refKnobArea.current.updateFromProps(props);\n    }\n  } catch (e) {\n    errorContent = e;\n  }\n\n  return [refElement, refKnobArea.current, errorContent];\n}\n\nfunction Knob(props) {\n  var _a = useKnobAreaClass(props),\n      refElement = _a[0],\n      knobArea = _a[1],\n      errorContent = _a[2];\n\n  var defaultStyle = {\n    width: props.diameter + \"px\",\n    height: props.diameter + \"px\",\n    borderRadius: props.diameter / 2 + \"px\",\n    position: 'relative',\n    outline: 'none',\n    boxSizing: 'border-box',\n    overflow: 'hidden'\n  };\n  var userStyle = props.knobStyle || {};\n\n  var activeStyle = __assign(__assign({}, defaultStyle), userStyle);\n\n  var knobElement = React.createElement(\"div\", {\n    ref: refElement,\n    onMouseDown: knobArea && knobArea.handleOnMouseDown,\n    onTouchStart: knobArea && knobArea.handleOnTouchStart,\n    onKeyDown: knobArea && knobArea.handleOnKeyDown,\n    onFocus: knobArea && knobArea.handleOnFocus,\n    onBlur: knobArea && knobArea.handleOnBlur,\n    style: activeStyle,\n    tabIndex: 0,\n    \"aria-valuenow\": props.value,\n    \"aria-valuemin\": props.min,\n    \"aria-valuemax\": props.max,\n    \"aria-valuetext\": props.ariaValueText,\n    \"aria-labelledby\": props.ariaLabelledBy\n  }, props.children);\n\n  if (errorContent) {\n    return React.createElement(KnobErrorWrap, {\n      error: errorContent,\n      diameter: props.diameter\n    }, knobElement);\n  }\n\n  return knobElement;\n}\n\nfunction SkinWrap(props) {\n  var defaultStyle = {\n    position: 'relative',\n    outline: 'none',\n    boxSizing: 'border-box'\n  };\n  var userStyle = props.style || {};\n\n  var activeStyle = __assign(__assign({}, defaultStyle), userStyle);\n\n  return React.createElement(\"div\", {\n    style: activeStyle\n  }, props.children);\n}\n\nfunction composeTwo(handler, callback) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    handler.apply(void 0, args);\n\n    if (callback) {\n      callback.apply(void 0, args);\n    }\n  };\n}\n\nfunction Basic(props) {\n  var _a = useState(0),\n      angle = _a[0],\n      setAngle = _a[1];\n\n  var _b = useState(false),\n      isActive = _b[0],\n      setIsActive = _b[1];\n\n  var theme = props.theme || {};\n  var activeColor = theme.activeColor || '#a1dca8';\n  var defaultColor = theme.defaultColor || '#3f3f3f';\n  var gradientStart = theme.gradientStart || '#f9f9f9';\n  var gradientEnd = theme.gradientEnd || '#eaeced';\n  var notchAndText = theme.notchAndText || '#3f3f3f';\n  var borderColor = isActive ? activeColor : defaultColor;\n  var angleChangeHandler = composeTwo(setAngle, props.onAngleChange);\n  var interactionChangeHandler = composeTwo(setIsActive, props.onInteractionChange);\n  return React.createElement(SkinWrap, {\n    style: props.style\n  }, React.createElement(Knob, {\n    diameter: props.diameter,\n    value: props.value,\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    spaceMaxFromZero: props.spaceMaxFromZero,\n    ariaLabelledBy: props.ariaLabelledBy,\n    ariaValueText: props.ariaValueText,\n    knobStyle: __assign({\n      cursor: 'pointer'\n    }, props.knobStyle),\n    onAngleChange: angleChangeHandler,\n    onInteractionChange: interactionChangeHandler,\n    onValueChange: props.onValueChange\n  }, React.createElement(React.Fragment, null, React.createElement(\"svg\", {\n    viewBox: \"0 0 166.56 166.56\",\n    transform: \"rotate(\" + angle + \")\",\n    style: {\n      transform: \"rotate(\" + angle + \"deg)\"\n    }\n  }, React.createElement(\"defs\", null, React.createElement(\"linearGradient\", {\n    id: \"a\"\n  }, React.createElement(\"stop\", {\n    offset: \"0\",\n    stopColor: gradientStart,\n    stopOpacity: \"1\"\n  }), React.createElement(\"stop\", {\n    offset: \"1\",\n    stopColor: gradientEnd,\n    stopOpacity: \"1\"\n  })), React.createElement(\"filter\", {\n    id: \"b\",\n    width: \"1.11\",\n    height: \"1.11\",\n    x: \"-0.055\",\n    y: \"-0.055\",\n    colorInterpolationFilters: \"sRGB\"\n  }, React.createElement(\"feGaussianBlur\", {\n    stdDeviation: \"3.45\"\n  })), React.createElement(\"linearGradient\", {\n    id: \"c\",\n    x1: \"140.985\",\n    x2: \"63.122\",\n    y1: \"98.751\",\n    y2: \"202.317\",\n    gradientTransform: \"translate(-75.643 -328.104)\",\n    gradientUnits: \"userSpaceOnUse\",\n    xlinkHref: \"#a\"\n  })), React.createElement(\"g\", {\n    fillOpacity: \"1\",\n    transform: \"translate(-21.72 -65.22)\"\n  }, React.createElement(\"circle\", {\n    cx: \"105\",\n    cy: \"148.5\",\n    r: \"75\",\n    fill: \"#ccc\",\n    stroke: \"none\",\n    strokeDasharray: \"none\",\n    strokeMiterlimit: \"4\",\n    strokeOpacity: \"1\",\n    strokeWidth: \"17.106\",\n    filter: \"url(#b)\",\n    opacity: \"1\"\n  }), React.createElement(\"circle\", {\n    cx: \"29.357\",\n    cy: \"-179.604\",\n    r: \"70\",\n    fill: \"url(#c)\",\n    stroke: borderColor,\n    strokeDasharray: \"none\",\n    strokeMiterlimit: \"4\",\n    strokeOpacity: \"1\",\n    strokeWidth: \"1\",\n    opacity: \"1\",\n    transform: \"rotate(135.448)\"\n  }), React.createElement(\"circle\", {\n    cx: \"105.083\",\n    cy: \"88.628\",\n    r: \"4.443\",\n    fill: notchAndText,\n    stroke: \"#b1b1b1\",\n    strokeDasharray: \"none\",\n    strokeMiterlimit: \"4\",\n    strokeOpacity: \"1\",\n    strokeWidth: \"0.551\",\n    opacity: \"1\"\n  }))), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      fontSize: Math.ceil(props.diameter / 4) + \"px\",\n      position: 'absolute',\n      top: 'calc(50% - 0.6em)',\n      userSelect: 'none',\n      color: notchAndText\n    }\n  }, props.value))), props.children);\n}\n\nfunction HighContrast(props) {\n  var _a = useState(0),\n      angle = _a[0],\n      setAngle = _a[1];\n\n  var _b = useState(false),\n      isActive = _b[0],\n      setIsActive = _b[1];\n\n  var theme = props.theme || {};\n  var activeColor = theme.activeColor || '#b56a7a';\n  var defaultColor = theme.defaultColor || '#100';\n  var bgrColor = isActive ? activeColor : defaultColor;\n  var angleChangeHandler = composeTwo(setAngle, props.onAngleChange);\n  var interactionChangeHandler = composeTwo(setIsActive, props.onInteractionChange);\n  return React.createElement(SkinWrap, {\n    style: props.style\n  }, React.createElement(Knob, {\n    diameter: props.diameter,\n    value: props.value,\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    spaceMaxFromZero: props.spaceMaxFromZero,\n    ariaLabelledBy: props.ariaLabelledBy,\n    ariaValueText: props.ariaValueText,\n    knobStyle: __assign({\n      cursor: 'pointer'\n    }, props.knobStyle),\n    onAngleChange: angleChangeHandler,\n    onInteractionChange: interactionChangeHandler,\n    onValueChange: props.onValueChange\n  }, React.createElement(React.Fragment, null, React.createElement(\"svg\", {\n    viewBox: \"0 0 100 100\",\n    transform: \"rotate(\" + angle + \")\",\n    style: {\n      transform: \"rotate(\" + angle + \"deg)\"\n    }\n  }, React.createElement(\"path\", {\n    fill: bgrColor,\n    d: \"M50 0A50 50 0 000 50a50 50 0 0050 50 50 50 0 0050-50A50 50 0 0050 0zm0 2a48 48 0 0148 48 48 48 0 01-48 48A48 48 0 012 50 48 48 0 0150 2z\"\n  }), React.createElement(\"path\", {\n    fill: bgrColor,\n    d: \"M50 4A46 46 0 004 50a46 46 0 0046 46 46 46 0 0046-46A46 46 0 0050 4zm0 2.141a4.276 4.276 0 014.276 4.277A4.276 4.276 0 0150 14.694a4.276 4.276 0 01-4.276-4.276A4.276 4.276 0 0150 6.141z\"\n  })), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      fontSize: Math.ceil(props.diameter / 3) + \"px\",\n      fontWeight: 'bold',\n      position: 'absolute',\n      top: 'calc(50% - 0.6em)',\n      userSelect: 'none',\n      color: '#fff'\n    }\n  }, props.value))), props.children);\n}\n\nfunction White(props) {\n  var _a = useState(0),\n      angle = _a[0],\n      setAngle = _a[1];\n\n  var _b = useState(false),\n      isActive = _b[0],\n      setIsActive = _b[1];\n\n  var theme = props.theme || {};\n  var activeNotchColor = theme.activeNotchColor || '#b56a7a';\n  var defaultNotchColor = theme.defaultNotchColor || '#f7f7f7';\n  var activeTextColor = theme.activeTextColor || '#b56a7a';\n  var defaultTextColor = theme.defaultTextColor || '#100';\n  var bgrColor = isActive ? activeTextColor : defaultTextColor;\n  var numSteps = Math.ceil((props.max - props.min) / props.step);\n  var numNotches = Math.min(numSteps, 36);\n  var activeNotch = Math.ceil(angle / Math.ceil(360 / numNotches));\n  var angleChangeHandler = composeTwo(setAngle, props.onAngleChange);\n  var interactionChangeHandler = composeTwo(setIsActive, props.onInteractionChange);\n  return React.createElement(SkinWrap, {\n    style: props.style\n  }, React.createElement(Knob, {\n    diameter: props.diameter,\n    value: props.value,\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    spaceMaxFromZero: props.spaceMaxFromZero,\n    ariaLabelledBy: props.ariaLabelledBy,\n    ariaValueText: props.ariaValueText,\n    knobStyle: __assign({\n      cursor: 'pointer'\n    }, props.knobStyle),\n    onAngleChange: angleChangeHandler,\n    onInteractionChange: interactionChangeHandler,\n    onValueChange: props.onValueChange\n  }, React.createElement(React.Fragment, null, React.createElement(\"svg\", {\n    viewBox: \"0 0 62.463 62.463\"\n  }, React.createElement(\"defs\", null, React.createElement(\"linearGradient\", {\n    id: \"prefix__c\"\n  }, React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#fff\"\n  }), React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#b0b0b0\"\n  })), React.createElement(\"linearGradient\", {\n    id: \"prefix__a\"\n  }, React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#939393\"\n  }), React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#f0f0f0\",\n    stopOpacity: 0\n  })), React.createElement(\"linearGradient\", {\n    id: \"prefix__b\"\n  }, React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#b0b0b0\"\n  }), React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#fdfdfd\"\n  })), React.createElement(\"linearGradient\", {\n    gradientTransform: \"matrix(.84848 0 0 .84848 -25.569 29.664)\",\n    gradientUnits: \"userSpaceOnUse\",\n    y2: 136.304,\n    x2: 200.519,\n    y1: 175.459,\n    x1: 244.552,\n    id: \"prefix__e\",\n    xlinkHref: \"#prefix__b\"\n  }), React.createElement(\"linearGradient\", {\n    gradientUnits: \"userSpaceOnUse\",\n    y2: 196.319,\n    x2: 143.659,\n    y1: 184.184,\n    x1: 133.863,\n    id: \"prefix__d\",\n    xlinkHref: \"#prefix__c\"\n  })), React.createElement(\"g\", {\n    transform: \"translate(-131.196 -134.336)\"\n  }, React.createElement(\"g\", {\n    transform: \"translate(-442.372 -663.575) scale(4.37185)\"\n  }, React.createElement(\"circle\", {\n    cx: 138.339,\n    cy: 189.655,\n    r: 7.144,\n    fill: bgrColor\n  }), React.createElement(\"path\", {\n    d: \"M138.34 182.511a7.144 7.144 0 00-7.144 7.144 7.144 7.144 0 007.143 7.144 7.144 7.144 0 007.144-7.144 7.144 7.144 0 00-7.144-7.144zm0 .53a6.615 6.615 0 016.614 6.614 6.615 6.615 0 01-6.615 6.614 6.615 6.615 0 01-6.614-6.614 6.615 6.615 0 016.614-6.615z\",\n    fill: \"url(#prefix__d)\"\n  }), React.createElement(\"circle\", {\n    cx: 138.339,\n    cy: 189.655,\n    r: 6.35,\n    fill: \"#fff\"\n  })), React.createElement(\"circle\", {\n    r: 14.583,\n    cy: 192.949,\n    cx: 149.253,\n    fill: \"none\"\n  }), React.createElement(\"circle\", {\n    cy: 165.567,\n    cx: 162.427,\n    fill: \"#f0f0f0\",\n    r: 27.151\n  })), React.createElement(\"g\", {\n    transform: \"translate(\" + 62.463 / 2 + \" \" + 62.463 / 2 + \") scale(0.45) rotate(-90)\"\n  }, Array.from(new Array(numNotches)).map(function (_, index) {\n    var step = 2 * Math.PI / numNotches;\n    var angle = index * step;\n    var width = 2;\n    var height = 8;\n    var x = width / 2 + 62.463 * Math.cos(angle);\n    var y = height / 2 + 62.463 * Math.sin(angle);\n    var origX = x - width / 2;\n    var origY = y - height / 2;\n    var fill = activeNotch > index ? activeNotchColor : defaultNotchColor;\n    var key = 'notch_' + index;\n    return React.createElement(\"rect\", {\n      key: key,\n      id: \"r\" + index,\n      fill: fill,\n      width: width,\n      height: height,\n      x: x,\n      y: y,\n      transform: \"rotate(\" + (index * Math.ceil(360 / numNotches) + 90) + \" \" + origX + \" \" + origY + \")\"\n    });\n  }))), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      fontSize: Math.ceil(props.diameter / 4) + \"px\",\n      position: 'absolute',\n      top: 'calc(50% - 0.6em)',\n      userSelect: 'none',\n      color: bgrColor\n    }\n  }, props.value))), props.children);\n}\n/*\r\n * CSS for this component is written by @simurai\r\n * All credits goes to him\r\n * https://codepen.io/simurai/pen/DwJdq\r\n */\n\n\nvar uniqClassName = \"metal-\" + new Date().getTime();\n\nfunction Silver(props) {\n  var _a = useState(0),\n      angle = _a[0],\n      setAngle = _a[1];\n\n  var _b = useState(uniqClassName + \"-bgr\"),\n      bgrClass = _b[0],\n      setBgrClass = _b[1];\n\n  var angleChangeHandler = composeTwo(setAngle, props.onAngleChange);\n  var interactionChangeHandler = composeTwo(function (isInteracting) {\n    isInteracting ? setBgrClass(uniqClassName + \"-bgr-active\") : setBgrClass(uniqClassName + \"-bgr\");\n  }, props.onInteractionChange);\n  var glowSpacing = 28;\n  return React.createElement(SkinWrap, {\n    style: props.style\n  }, React.createElement(Knob, {\n    diameter: props.diameter + glowSpacing,\n    value: props.value,\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    spaceMaxFromZero: props.spaceMaxFromZero,\n    ariaLabelledBy: props.ariaLabelledBy,\n    ariaValueText: props.ariaValueText,\n    knobStyle: __assign({\n      cursor: 'pointer'\n    }, props.knobStyle),\n    onAngleChange: angleChangeHandler,\n    onInteractionChange: interactionChangeHandler,\n    onValueChange: props.onValueChange\n  }, React.createElement(React.Fragment, null, React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \".\" + uniqClassName + \"-bgr, .\" + uniqClassName + \"-bgr-active {\\n                        position: absolute;\\n                        z-index:1;\\n                        outline: none;\\n\\n                        background-color: hsl(0,0%,90%);\\n                        box-shadow: inset hsla(0,0%,15%,  1) 0  0px 0px 4px, /* border */\\n                        inset hsla(0,0%,15%, .8) 0 -1px 5px 4px, /* soft SD */\\n                        inset hsla(0,0%,0%, .25) 0 -1px 0px 7px, /* bottom SD */\\n                        inset hsla(0,0%,100%,.7) 0  2px 1px 7px, /* top HL */\\n\\n                        hsla(0,0%, 0%,.15) 0 -5px 6px 4px, /* outer SD */\\n                        hsla(0,0%,100%,.5) 0  5px 6px 4px; /* outer HL */ \\n\\n                        transition: color .2s;\\n                    }\\n                    \\n                    .\" + uniqClassName + \"-bgr-active {\\n                        color: hsl(210, 100%, 40%);\\n                        text-shadow: hsla(210,100%,20%,.3) 0 -1px 0, hsl(210,100%,85%) 0 2px 1px, hsla(200,100%,80%,1) 0 0 5px, hsla(210,100%,50%,.6) 0 0 20px;\\n                        box-shadow: \\n                            inset hsla(208, 79%, 28%,  1) 0  0px 0px 4px, /* border */\\n                            inset hsla(208,100%,15%, .4) 0 -1px 5px 4px, /* soft SD */\\n                            inset hsla(208,100%,20%,.25) 0 -1px 0px 7px, /* bottom SD */\\n                            inset hsla(208,100%,100%,.7) 0  2px 1px 7px, /* top HL */\\n\\n                            hsla(208,100%,75%, .8) 0  0px 3px 2px, /* outer SD */\\n                            hsla(208,50%,40%, .25) 0 -5px 6px 4px, /* outer SD */\\n                            hsla(208,80%,95%,   1) 0  5px 6px 4px; /* outer HL */\\n                    }\\n\\n                    .\" + uniqClassName + \"-rot {\\n                        position: absolute;\\n                        z-index: 2;\\n                        top: 7px;\\n                        left: 7px;\\n                        background-image: -webkit-radial-gradient(  50%   0%,  8% 50%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\\n                        -webkit-radial-gradient(  50% 100%, 12% 50%, hsla(0,0%,100%,.6) 0%, hsla(0,0%,100%,0) 100%),\\n                        -webkit-radial-gradient(   0%  50%, 50%  7%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\\n                        -webkit-radial-gradient( 100%  50%, 50%  5%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\\n\\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,  0%,0) 0%, hsla(0,0%,  0%,0)   3%, hsla(0,0%,  0%,.1) 3.5%),\\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0)   6%, hsla(0,0%,100%,.1) 7.5%),\\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0) 1.2%, hsla(0,0%,100%,.2) 2.2%),\\n\\n                        -webkit-radial-gradient( 50% 50%, 200% 50%, hsla(0,0%,90%,1) 5%, hsla(0,0%,85%,1) 30%, hsla(0,0%,60%,1) 100%);\\n                    }\\n\\n\\n                    .\" + uniqClassName + \"-rot:before, .\" + uniqClassName + \"-rot:after {\\n                        content: \\\"\\\";\\n                        top: 0;\\n                        left: 0;\\n                        position: absolute;\\n                        width: inherit;\\n                        height: inherit;\\n                        border-radius: inherit;\\n\\n                        /* fake conical gradients */\\n                        background-image: -webkit-radial-gradient(  50%   0%, 10% 50%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\\n                        -webkit-radial-gradient(  50% 100%, 10% 50%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\\n                        -webkit-radial-gradient(   0%  50%, 50% 10%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\\n                        -webkit-radial-gradient( 100%  50%, 50% 06%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%);\\n                    }\\n                    .\" + uniqClassName + \"-rot:before { transform: rotate( 65deg); }\\n                    .\" + uniqClassName + \"-rot:after { transform: rotate(-65deg); }\\n                    \\n                    .\" + uniqClassName + \"-notch {\\n                        position: absolute;\\n                        width: 10px;\\n                        height: 10px;\\n                        background: black;\\n                        border-radius: 5px;\\n                        top: 5px;\\n                    }\\n                    .\" + uniqClassName + \"-text {\\n                        width: 100%;\\n                        text-align: center;\\n                        font-weight: bold;\\n                        position: absolute;\\n                        top: calc(50% - 0.6em);\\n                        user-select: none;\\n                        z-index: 3;\\n                        color: #262626;\\n                        text-shadow: -1px -1px 1px #111, 1px 1px 2px #fff;\\n                    }\"), React.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      width: props.diameter,\n      height: props.diameter,\n      userSelect: 'none',\n      margin: glowSpacing / 2 + \"px 0 0 \" + glowSpacing / 2 + \"px\"\n    }\n  }, React.createElement(\"div\", {\n    className: bgrClass,\n    style: {\n      width: props.diameter + \"px\",\n      height: props.diameter + \"px\",\n      borderRadius: props.diameter / 2 + \"px\"\n    }\n  }), React.createElement(\"div\", {\n    className: uniqClassName + \"-rot\",\n    style: {\n      width: props.diameter - 14 + \"px\",\n      height: props.diameter - 14 + \"px\",\n      lineHeight: props.diameter - 14 + \"px\",\n      borderRadius: (props.diameter - 14) / 2 + \"px\",\n      transform: \"rotate(\" + angle + \"deg)\"\n    }\n  }, React.createElement(\"div\", {\n    className: uniqClassName + \"-notch\",\n    style: {\n      left: (props.diameter - 24) / 2 + \"px\"\n    }\n  })), React.createElement(\"div\", {\n    className: uniqClassName + \"-text\",\n    style: {\n      fontSize: Math.ceil(props.diameter / 4) + \"px\"\n    }\n  }, props.value)))), props.children);\n}\n/*\r\n * CSS for this component is written by @Hyungsub\r\n * All credits goes to him\r\n * https://codepen.io/Hyungsub08/pen/yLBPJKW\r\n */\n\n\nvar uniqClassName$1 = \"donut-\" + new Date().getTime();\n\nfunction Donut(props) {\n  var _a = useState(0),\n      angle = _a[0],\n      setAngle = _a[1];\n\n  var _b = useState(uniqClassName$1 + \"-center\"),\n      centerClass = _b[0],\n      setCenterClass = _b[1];\n\n  var angleChangeHandler = composeTwo(setAngle, props.onAngleChange);\n  var interactionChangeHandler = composeTwo(function (isInteracting) {\n    isInteracting ? setCenterClass(uniqClassName$1 + \"-center-active\") : setCenterClass(uniqClassName$1 + \"-center\");\n  }, props.onInteractionChange);\n  var theme = props.theme || {};\n  var donutColor = theme.donutColor || '#1BA098';\n  var defaultBgrColor = theme.bgrColor || '#e1e1e1';\n  var maxedBgrColor = theme.maxedBgrColor || '#051622';\n  var centerColor = theme.centerColor || '#fff';\n  var centerFocusedColor = theme.centerFocusedColor || '#F7F4E9';\n  var donutThickness = theme.donutThickness || 30;\n  var bgrColor = defaultBgrColor;\n\n  if (props.value === props.max) {\n    bgrColor = maxedBgrColor;\n  }\n\n  var colorBgr = bgrColor;\n  var colorOne = donutColor;\n  var colorTwo = donutColor;\n  var angleOne = 90;\n  var angleTwo = angle;\n\n  if (angle < 180) {\n    colorBgr = donutColor;\n    colorOne = bgrColor;\n    colorTwo = bgrColor;\n    angleOne = angle + 90;\n    angleTwo = 0;\n  }\n\n  return React.createElement(SkinWrap, {\n    style: props.style\n  }, React.createElement(Knob, {\n    diameter: props.diameter,\n    value: props.value,\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    spaceMaxFromZero: props.spaceMaxFromZero,\n    ariaLabelledBy: props.ariaLabelledBy,\n    ariaValueText: props.ariaValueText,\n    knobStyle: __assign({\n      cursor: 'pointer'\n    }, props.knobStyle),\n    onAngleChange: angleChangeHandler,\n    onInteractionChange: interactionChangeHandler,\n    onValueChange: props.onValueChange\n  }, React.createElement(React.Fragment, null, React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \".\" + uniqClassName$1 + \" {\\n                      position: relative;\\n                      border-radius: 50%;\\n                      overflow: hidden;\\n                    }\\n                    .\" + uniqClassName$1 + \"-slice-one, .\" + uniqClassName$1 + \"-slice-two {\\n                      position: absolute;\\n                      top: 0;\\n                      left: 0;\\n                      width: 100%;\\n                      height: 100%;\\n                    }\\n                    .\" + uniqClassName$1 + \"-center, .\" + uniqClassName$1 + \"-center-active {\\n                      position: absolute;\\n                      border-radius: 50%;\\n                    }\\n                    .\" + uniqClassName$1 + \"-center {\\n                      background: \" + centerColor + \";\\n                    }\\n                    .\" + uniqClassName$1 + \"-center-active {\\n                      background: \" + centerFocusedColor + \";\\n                    }\\n                    .\" + uniqClassName$1 + \"-center span {\\n                      display: block;\\n                      text-align: center;\\n                    }\\n                    .\" + uniqClassName$1 + \"-text {\\n                        width: 100%;\\n                        text-align: center;\\n                        font-weight: bold;\\n                        position: absolute;\\n                        top: calc(50% - 0.6em);\\n                        user-select: none;\\n                        z-index: 3;\\n                    }\"), React.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      width: props.diameter,\n      height: props.diameter,\n      userSelect: 'none'\n    }\n  }, React.createElement(\"div\", {\n    className: uniqClassName$1,\n    style: {\n      width: props.diameter + \"px\",\n      height: props.diameter + \"px\",\n      background: colorBgr\n    }\n  }, React.createElement(\"div\", {\n    className: uniqClassName$1 + \"-slice-one\",\n    style: {\n      clip: \"rect(0 \" + props.diameter + \"px \" + props.diameter / 2 + \"px 0)\",\n      transform: \"rotate(\" + angleOne + \"deg)\",\n      background: colorOne\n    }\n  }), React.createElement(\"div\", {\n    className: uniqClassName$1 + \"-slice-two\",\n    style: {\n      clip: \"rect(0 \" + props.diameter / 2 + \"px \" + props.diameter + \"px 0)\",\n      transform: \"rotate(\" + angleTwo + \"deg)\",\n      background: colorTwo\n    }\n  }), React.createElement(\"div\", {\n    className: centerClass,\n    style: {\n      top: donutThickness + \"px\",\n      left: donutThickness + \"px\",\n      width: props.diameter - donutThickness * 2 + \"px\",\n      height: props.diameter - donutThickness * 2 + \"px\"\n    }\n  })), React.createElement(\"div\", {\n    className: uniqClassName$1 + \"-text\",\n    style: {\n      color: donutColor,\n      fontSize: Math.ceil(props.diameter / 4) + \"px\"\n    }\n  }, props.value)))), props.children);\n}\n\nexport default Knob;\nexport { Basic, Donut, HighContrast, Silver, SkinWrap, White, composeTwo };","map":{"version":3,"sources":["../src/KnobArea.ts","../src/KnobErrorWrap.tsx","../src/Knob.tsx","../src/skins/layout/SkinWrap.tsx","../src/util/composeTwo.ts","../src/skins/Basic.tsx","../src/skins/HighContrast.tsx","../src/skins/White.tsx","../src/skins/Silver.tsx","../src/skins/Donut.tsx"],"names":["uniqClassName"],"mappings":"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","sourcesContent":["import { KnobProps } from './Knob'\n\nclass KnobArea {\n    onAngleChange: Function\n    onValueChange: Function\n    onInteractionChange: Function\n    min: number\n    max: number\n    step: number\n    diameter: number\n    spaceMaxFromZero: boolean\n    refElement: React.RefObject<HTMLDivElement>\n    windowEventListeners: {\n        mouse: Array<['mousemove' | 'mouseup', EventListener]>\n        touch: Array<['touchmove' | 'touchend', EventListener]>\n    }\n\n    private _isInteracting: boolean\n    private _value: number\n    private _angle: number\n    private _locationX: number\n    private _locationY: number\n\n    constructor(refElement: React.RefObject<HTMLDivElement>, props: KnobProps) {\n        this.onAngleChange = props.onAngleChange\n        this.onValueChange = props.onValueChange\n        this.onInteractionChange = props.onInteractionChange\n        this._locationX = 0\n        this._locationY = 0\n        this.refElement = refElement\n\n        this._isInteracting = false\n\n        this.windowEventListeners = {\n            mouse: [\n                ['mousemove', this.handleOnMouseMove],\n                ['mouseup', this.handleOnMouseUp],\n            ],\n            touch: [\n                ['touchmove', this.handleOnTouchMove],\n                ['touchend', this.handleOnTouchEnd],\n            ],\n        }\n\n        this.updateFromProps(props)\n    }\n\n    updateFromProps(props: KnobProps): void {\n        if (props.max <= props.min || props.max < props.min + props.step) {\n            throw new Error(\n                'Max value should be bigger or equal to min+step value.',\n            )\n        }\n\n        this.min = props.min\n        this.max = props.max\n        this.step = props.step\n        this.diameter = props.diameter\n\n        this.onAngleChange = props.onAngleChange || this.onAngleChange\n        this.onValueChange = props.onValueChange || this.onValueChange\n        this.onInteractionChange =\n            props.onInteractionChange || this.onInteractionChange\n        this.spaceMaxFromZero =\n            props.spaceMaxFromZero !== undefined ? props.spaceMaxFromZero : true\n\n        if (props.value !== this.value) {\n            if (props.min > this.value || props.value < props.min) {\n                this.value = props.min\n            } else if (props.max < this.value || props.value > props.max) {\n                this.value = props.max\n            } else {\n                this.value = props.value\n            }\n            this.angle = this.angleFromValue(this.value)\n        }\n\n        if (this.value % this.step || (this.max - this.min) % this.step) {\n            throw new Error(\n                'Value and (max - min) should be divisible by step.',\n            )\n        }\n    }\n\n    get angle(): number {\n        return this._angle\n    }\n\n    set angle(val: number) {\n        if (this._angle === val) {\n            return\n        }\n        this._angle = val\n        if (this.onAngleChange) {\n            this.onAngleChange(this._angle)\n        }\n    }\n\n    get value(): number {\n        return this._value\n    }\n\n    set value(val: number) {\n        if (this._value === val) {\n            return\n        }\n        this._value = val\n        if (this.onValueChange) {\n            this.onValueChange(this._value)\n        }\n    }\n\n    get isInteracting(): boolean {\n        return this._isInteracting\n    }\n\n    set isInteracting(val: boolean) {\n        if (this._isInteracting === val) {\n            return\n        }\n        this._isInteracting = val\n        if (this.onInteractionChange) {\n            this.onInteractionChange(this._isInteracting)\n        }\n    }\n\n    get numSteps(): number {\n        return (this.max - this.min) / this.step\n    }\n\n    get valsDistribution(): number {\n        if (this.spaceMaxFromZero) {\n            return 360 / (this.numSteps + 1)\n        }\n        return 360 / this.numSteps\n    }\n\n    private getComputedTransformXY(\n        el: HTMLElement,\n    ): { x: number; y: number; scaleX: number; scaleY: number } {\n        if (!window.getComputedStyle || !el) {\n            return { x: 0, y: 0, scaleX: 1, scaleY: 1 }\n        }\n\n        const style = window.getComputedStyle(el)\n        const transform = style.transform || style.webkitTransform\n        if (!transform) {\n            return { x: 0, y: 0, scaleX: 1, scaleY: 1 }\n        }\n        let mat = transform.match(/^matrix3d\\((.+)\\)$/)\n        if (mat) {\n            const scaleX = parseFloat(mat[1].split(', ')[0])\n            const scaleY = parseFloat(mat[1].split(', ')[5])\n            return {\n                x: parseFloat(mat[1].split(', ')[12]),\n                y: parseFloat(mat[1].split(', ')[13]),\n                scaleX,\n                scaleY,\n            }\n        }\n\n        mat = transform.match(/^matrix\\((.+)\\)$/)\n        const scaleX = mat ? parseFloat(mat[1].split(', ')[0]) : 1\n        const scaleY = mat ? parseFloat(mat[1].split(', ')[3]) : 1\n        return {\n            x: mat ? parseFloat(mat[1].split(', ')[4]) : 0,\n            y: mat ? parseFloat(mat[1].split(', ')[5]) : 0,\n            scaleX,\n            scaleY,\n        }\n    }\n\n    updateAreaLocation(eventCoords: {\n        pageX: number\n        pageY: number\n        clientX: number\n        clientY: number\n    }): void {\n        const areaRadius = this.diameter / 2\n        // See article with explanation at: https://www.kirupa.com/html5/get_element_position_using_javascript.htm\n        let x = 0\n        let y = 0\n        let el = this.refElement.current as HTMLElement\n        let transformXY = this.getComputedTransformXY(el)\n        while (el) {\n            if (el.tagName.toUpperCase() === 'BODY') {\n                // deal with browser quirks with body/window/document and page scroll\n                const xScroll =\n                    el.scrollLeft || document.documentElement.scrollLeft\n                const yScroll =\n                    el.scrollTop || document.documentElement.scrollTop\n\n                x += el.offsetLeft - xScroll + el.clientLeft\n                y += el.offsetTop - yScroll + el.clientTop\n            } else {\n                // for all other non-BODY elements\n                x += el.offsetLeft - el.scrollLeft + el.clientLeft\n                y += el.offsetTop - el.scrollTop + el.clientTop\n            }\n            x += transformXY.x\n            y += transformXY.y\n            el = el.offsetParent as HTMLElement\n            transformXY = this.getComputedTransformXY(el)\n        }\n\n        this._locationX = x + areaRadius\n        this._locationY = y + areaRadius\n\n        this._locationX += eventCoords.pageX - eventCoords.clientX\n        this._locationY += eventCoords.pageY - eventCoords.clientY\n    }\n\n    calcDegreeOfRotation(pageX: number, pageY: number): number {\n        const rad = Math.atan2(pageX - this._locationX, pageY - this._locationY)\n        const deg = Math.abs(rad * (180 / Math.PI) - 180)\n        return deg\n    }\n\n    valueFromAngle(angle: number): number {\n        const angleAsPercent = angle / (this.numSteps * this.valsDistribution)\n        const totalValue = this.numSteps * this.step\n        const val = this.min + angleAsPercent * totalValue\n        if (val > this.max + this.step / 2) {\n            return this.min\n        }\n        const valuesList = Array.from(new Array(this.numSteps + 1)).map(\n            (_, i) => {\n                return this.min + i * this.step\n            },\n        )\n        const closest = valuesList.reduce(function(prev, curr) {\n            return Math.abs(curr - val) < Math.abs(prev - val) ? curr : prev\n        })\n        return closest\n    }\n\n    angleFromValue(value: number): number {\n        return Math.ceil(\n            ((value - this.min) / this.step) * this.valsDistribution,\n        )\n    }\n\n    updateAngleValue(pageX: number, pageY: number): void {\n        requestAnimationFrame(() => {\n            const updatedAngle = this.calcDegreeOfRotation(pageX, pageY)\n            this.value = this.valueFromAngle(updatedAngle)\n            this.angle = this.angleFromValue(this.value)\n        })\n    }\n\n    handleOnMouseDown = (event: React.MouseEvent): void => {\n        this.addWindowEventListeners('mouse')\n        const { pageX, pageY, clientX, clientY } = event\n        this.updateAreaLocation({ pageX, pageY, clientX, clientY })\n        this.updateAngleValue(pageX, pageY)\n    }\n\n    handleOnMouseMove = (event: MouseEvent): void => {\n        if (!this.isInteracting) {\n            return\n        }\n        const { pageX, pageY } = event\n        this.updateAngleValue(pageX, pageY)\n    }\n\n    handleOnMouseUp = (): void => {\n        this.removeWindowEventListeners('mouse')\n    }\n\n    handleOnTouchStart = (event: React.TouchEvent): void => {\n        this.addWindowEventListeners('touch')\n        if ('changedTouches' in event && event.changedTouches.length === 1) {\n            const { pageX, pageY, clientX, clientY } = event.changedTouches[0]\n            this.updateAreaLocation({ pageX, pageY, clientX, clientY })\n            this.updateAngleValue(pageX, pageY)\n        }\n    }\n\n    handleOnTouchMove = (event: TouchEvent): void => {\n        if (!this.isInteracting) {\n            return\n        }\n        if ('changedTouches' in event && event.changedTouches.length === 1) {\n            const { pageX, pageY } = event.changedTouches[0]\n            this.updateAngleValue(pageX, pageY)\n        }\n    }\n\n    handleOnTouchEnd = (): void => {\n        this.removeWindowEventListeners('touch')\n    }\n\n    handleOnFocus = (): void => {\n        this.isInteracting = true\n    }\n\n    handleOnBlur = (): void => {\n        this.isInteracting = false\n    }\n\n    handleOnKeyDown = (event: React.KeyboardEvent): void => {\n        if (event.keyCode === 38 && this.value + this.step <= this.max) {\n            this.value += this.step\n            this.angle = this.angleFromValue(this.value)\n        } else if (event.keyCode === 40 && this.value - this.step >= this.min) {\n            this.value -= this.step\n            this.angle = this.angleFromValue(this.value)\n        }\n    }\n\n    addWindowEventListeners(group: 'mouse' | 'touch'): void {\n        this.isInteracting = true\n        this.windowEventListeners[group].forEach(\n            (handlerData: [string, EventListener]) => {\n                const [eventName, handler] = handlerData\n                window.addEventListener(eventName, handler)\n            },\n        )\n    }\n\n    removeWindowEventListeners(group: 'mouse' | 'touch'): void {\n        this.isInteracting = false\n        this.windowEventListeners[group].forEach(\n            (handlerData: [string, EventListener]) => {\n                const [eventName, handler] = handlerData\n                window.removeEventListener(eventName, handler)\n            },\n        )\n    }\n}\n\nexport default KnobArea\n","import React from 'react'\n\ninterface ErrorAreaProps {\n    error: Error\n    diameter: number\n    children?: React.ReactNode\n}\n\nexport default function KnobErrorWrap(props: ErrorAreaProps): JSX.Element {\n    console && console.error(props.error)\n\n    return (\n        <div\n            style={{\n                width: `${props.diameter}px`,\n                height: `${props.diameter}px`,\n                borderRadius: `${props.diameter / 2}px`,\n                position: 'relative' as 'relative',\n                outline: 'none',\n                boxSizing: 'border-box' as 'border-box',\n                overflow: 'hidden',\n            }}\n        >\n            <div\n                style={{\n                    fontSize: '22px',\n                    fontWeight: 'bold',\n                    color: 'red',\n                    textAlign: 'center',\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    zIndex: 999,\n                    paddingTop: 'calc(50% - 0.5em)',\n                    background: 'rgba(0, 0, 0, 0.2)',\n                    pointerEvents: 'none',\n                }}\n            >\n                💣\n            </div>\n            {props.children}\n        </div>\n    )\n}\n","import React, { useRef } from 'react'\nimport KnobArea from './KnobArea'\nimport KnobErrorWrap from './KnobErrorWrap'\n\nexport interface KnobProps {\n    diameter: number\n    value: number\n    min: number\n    max: number\n    step: number\n    spaceMaxFromZero?: boolean\n    ariaLabelledBy?: string\n    ariaValueText?: string\n    knobStyle?: React.CSSProperties\n    children?: React.ReactNode\n    onAngleChange?: (angle: number) => void\n    onInteractionChange?: (isInteracting: boolean) => void\n    onValueChange?: (value: number) => void\n}\n\nexport function useKnobAreaClass(\n    props: KnobProps,\n): [React.RefObject<HTMLDivElement>, KnobArea | null, Error | null] {\n    const refElement = useRef(null)\n    const refKnobArea = useRef<KnobArea>(null)\n    let errorContent: null | Error = null\n    try {\n        if (!refKnobArea.current) {\n            refKnobArea.current = new KnobArea(refElement, props)\n        } else {\n            refKnobArea.current.updateFromProps(props)\n        }\n    } catch (e) {\n        errorContent = e\n    }\n    return [refElement, refKnobArea.current, errorContent]\n}\n\nexport default function Knob(props: KnobProps): JSX.Element {\n    const [refElement, knobArea, errorContent] = useKnobAreaClass(props)\n    const defaultStyle = {\n        width: `${props.diameter}px`,\n        height: `${props.diameter}px`,\n        borderRadius: `${props.diameter / 2}px`,\n        position: 'relative' as 'relative',\n        outline: 'none',\n        boxSizing: 'border-box' as 'border-box',\n        overflow: 'hidden',\n    }\n    const userStyle = props.knobStyle || {}\n    const activeStyle = { ...defaultStyle, ...userStyle }\n    const knobElement = (\n        <div\n            ref={refElement}\n            onMouseDown={knobArea && knobArea.handleOnMouseDown}\n            onTouchStart={knobArea && knobArea.handleOnTouchStart}\n            onKeyDown={knobArea && knobArea.handleOnKeyDown}\n            onFocus={knobArea && knobArea.handleOnFocus}\n            onBlur={knobArea && knobArea.handleOnBlur}\n            style={activeStyle}\n            tabIndex={0}\n            aria-valuenow={props.value}\n            aria-valuemin={props.min}\n            aria-valuemax={props.max}\n            aria-valuetext={props.ariaValueText}\n            aria-labelledby={props.ariaLabelledBy}\n        >\n            {props.children}\n        </div>\n    )\n    if (errorContent) {\n        return (\n            <KnobErrorWrap error={errorContent} diameter={props.diameter}>\n                {knobElement}\n            </KnobErrorWrap>\n        )\n    }\n    return knobElement\n}\n","import React from 'react'\n\ninterface SkinWrapProps {\n    children: React.ReactNode\n    style?: React.CSSProperties\n}\n\nexport default function SkinWrap(props: SkinWrapProps): JSX.Element {\n    const defaultStyle = {\n        position: 'relative' as 'relative',\n        outline: 'none',\n        boxSizing: 'border-box' as 'border-box',\n    }\n    const userStyle = props.style || {}\n    const activeStyle = { ...defaultStyle, ...userStyle }\n    return <div style={activeStyle}>{props.children}</div>\n}\n","export default function composeTwo<T>(\n    handler: (...args: T[]) => void,\n    callback?: (...args: T[]) => void,\n): (...args: T[]) => void {\n    return function(...args): void {\n        handler(...args)\n        if (callback) {\n            callback(...args)\n        }\n    }\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinWrap from './layout/SkinWrap'\nimport SkinProps from './SkinProps'\nimport composeTwo from '../util/composeTwo'\n\nexport interface BasicTheme {\n    defaultColor?: string\n    activeColor?: string\n    gradientStart?: string\n    gradientEnd?: string\n    notchAndText?: string\n}\n\nexport default function Basic(props: SkinProps<BasicTheme>): JSX.Element {\n    const [angle, setAngle] = useState(0)\n    const [isActive, setIsActive] = useState(false)\n    const theme = props.theme || {}\n    const activeColor = theme.activeColor || '#a1dca8'\n    const defaultColor = theme.defaultColor || '#3f3f3f'\n    const gradientStart = theme.gradientStart || '#f9f9f9'\n    const gradientEnd = theme.gradientEnd || '#eaeced'\n    const notchAndText = theme.notchAndText || '#3f3f3f'\n    const borderColor = isActive ? activeColor : defaultColor\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>(\n        setIsActive,\n        props.onInteractionChange,\n    )\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <svg\n                        viewBox=\"0 0 166.56 166.56\"\n                        transform={`rotate(${angle})`}\n                        style={{ transform: `rotate(${angle}deg)` }}\n                    >\n                        <defs>\n                            <linearGradient id=\"a\">\n                                <stop\n                                    offset=\"0\"\n                                    stopColor={gradientStart}\n                                    stopOpacity=\"1\"\n                                ></stop>\n                                <stop\n                                    offset=\"1\"\n                                    stopColor={gradientEnd}\n                                    stopOpacity=\"1\"\n                                ></stop>\n                            </linearGradient>\n                            <filter\n                                id=\"b\"\n                                width=\"1.11\"\n                                height=\"1.11\"\n                                x=\"-0.055\"\n                                y=\"-0.055\"\n                                colorInterpolationFilters=\"sRGB\"\n                            >\n                                <feGaussianBlur stdDeviation=\"3.45\"></feGaussianBlur>\n                            </filter>\n                            <linearGradient\n                                id=\"c\"\n                                x1=\"140.985\"\n                                x2=\"63.122\"\n                                y1=\"98.751\"\n                                y2=\"202.317\"\n                                gradientTransform=\"translate(-75.643 -328.104)\"\n                                gradientUnits=\"userSpaceOnUse\"\n                                xlinkHref=\"#a\"\n                            ></linearGradient>\n                        </defs>\n                        <g fillOpacity=\"1\" transform=\"translate(-21.72 -65.22)\">\n                            <circle\n                                cx=\"105\"\n                                cy=\"148.5\"\n                                r=\"75\"\n                                fill=\"#ccc\"\n                                stroke=\"none\"\n                                strokeDasharray=\"none\"\n                                strokeMiterlimit=\"4\"\n                                strokeOpacity=\"1\"\n                                strokeWidth=\"17.106\"\n                                filter=\"url(#b)\"\n                                opacity=\"1\"\n                            ></circle>\n                            <circle\n                                cx=\"29.357\"\n                                cy=\"-179.604\"\n                                r=\"70\"\n                                fill=\"url(#c)\"\n                                stroke={borderColor}\n                                strokeDasharray=\"none\"\n                                strokeMiterlimit=\"4\"\n                                strokeOpacity=\"1\"\n                                strokeWidth=\"1\"\n                                opacity=\"1\"\n                                transform=\"rotate(135.448)\"\n                            ></circle>\n                            <circle\n                                cx=\"105.083\"\n                                cy=\"88.628\"\n                                r=\"4.443\"\n                                fill={notchAndText}\n                                stroke=\"#b1b1b1\"\n                                strokeDasharray=\"none\"\n                                strokeMiterlimit=\"4\"\n                                strokeOpacity=\"1\"\n                                strokeWidth=\"0.551\"\n                                opacity=\"1\"\n                            ></circle>\n                        </g>\n                    </svg>\n                    <div\n                        style={{\n                            width: '100%',\n                            textAlign: 'center',\n                            fontSize: `${Math.ceil(props.diameter / 4)}px`,\n                            position: 'absolute',\n                            top: 'calc(50% - 0.6em)',\n                            userSelect: 'none',\n                            color: notchAndText,\n                        }}\n                    >\n                        {props.value}\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinWrap from './layout/SkinWrap'\nimport SkinProps from './SkinProps'\nimport composeTwo from '../util/composeTwo'\n\nexport interface HighContrastTheme {\n    defaultColor?: string\n    activeColor?: string\n}\n\nexport default function HighContrast(\n    props: SkinProps<HighContrastTheme>,\n): JSX.Element {\n    const [angle, setAngle] = useState(0)\n    const [isActive, setIsActive] = useState(false)\n    const theme = props.theme || {}\n    const activeColor = theme.activeColor || '#b56a7a'\n    const defaultColor = theme.defaultColor || '#100'\n    const bgrColor = isActive ? activeColor : defaultColor\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>(\n        setIsActive,\n        props.onInteractionChange,\n    )\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <svg\n                        viewBox=\"0 0 100 100\"\n                        transform={`rotate(${angle})`}\n                        style={{ transform: `rotate(${angle}deg)` }}\n                    >\n                        <path\n                            fill={bgrColor}\n                            d=\"M50 0A50 50 0 000 50a50 50 0 0050 50 50 50 0 0050-50A50 50 0 0050 0zm0 2a48 48 0 0148 48 48 48 0 01-48 48A48 48 0 012 50 48 48 0 0150 2z\"\n                        />\n                        <path\n                            fill={bgrColor}\n                            d=\"M50 4A46 46 0 004 50a46 46 0 0046 46 46 46 0 0046-46A46 46 0 0050 4zm0 2.141a4.276 4.276 0 014.276 4.277A4.276 4.276 0 0150 14.694a4.276 4.276 0 01-4.276-4.276A4.276 4.276 0 0150 6.141z\"\n                        />\n                    </svg>\n                    <div\n                        style={{\n                            width: '100%',\n                            textAlign: 'center',\n                            fontSize: `${Math.ceil(props.diameter / 3)}px`,\n                            fontWeight: 'bold',\n                            position: 'absolute',\n                            top: 'calc(50% - 0.6em)',\n                            userSelect: 'none',\n                            color: '#fff',\n                        }}\n                    >\n                        {props.value}\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinWrap from './layout/SkinWrap'\nimport SkinProps from './SkinProps'\nimport composeTwo from '../util/composeTwo'\n\nexport interface WhiteTheme {\n    activeNotchColor?: string\n    defaultNotchColor?: string\n    activeTextColor?: string\n    defaultTextColor?: string\n}\n\nexport default function White(props: SkinProps<WhiteTheme>): JSX.Element {\n    const [angle, setAngle] = useState(0)\n    const [isActive, setIsActive] = useState(false)\n    const theme = props.theme || {}\n    const activeNotchColor = theme.activeNotchColor || '#b56a7a'\n    const defaultNotchColor = theme.defaultNotchColor || '#f7f7f7'\n    const activeTextColor = theme.activeTextColor || '#b56a7a'\n    const defaultTextColor = theme.defaultTextColor || '#100'\n    const bgrColor = isActive ? activeTextColor : defaultTextColor\n    const numSteps = Math.ceil((props.max - props.min) / props.step)\n    const numNotches = Math.min(numSteps, 36)\n    const activeNotch = Math.ceil(angle / Math.ceil(360 / numNotches))\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>(\n        setIsActive,\n        props.onInteractionChange,\n    )\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <svg viewBox=\"0 0 62.463 62.463\">\n                        <defs>\n                            <linearGradient id=\"prefix__c\">\n                                <stop offset={0} stopColor=\"#fff\" />\n                                <stop offset={1} stopColor=\"#b0b0b0\" />\n                            </linearGradient>\n                            <linearGradient id=\"prefix__a\">\n                                <stop offset={0} stopColor=\"#939393\" />\n                                <stop\n                                    offset={1}\n                                    stopColor=\"#f0f0f0\"\n                                    stopOpacity={0}\n                                />\n                            </linearGradient>\n                            <linearGradient id=\"prefix__b\">\n                                <stop offset={0} stopColor=\"#b0b0b0\" />\n                                <stop offset={1} stopColor=\"#fdfdfd\" />\n                            </linearGradient>\n                            <linearGradient\n                                gradientTransform=\"matrix(.84848 0 0 .84848 -25.569 29.664)\"\n                                gradientUnits=\"userSpaceOnUse\"\n                                y2={136.304}\n                                x2={200.519}\n                                y1={175.459}\n                                x1={244.552}\n                                id=\"prefix__e\"\n                                xlinkHref=\"#prefix__b\"\n                            />\n                            <linearGradient\n                                gradientUnits=\"userSpaceOnUse\"\n                                y2={196.319}\n                                x2={143.659}\n                                y1={184.184}\n                                x1={133.863}\n                                id=\"prefix__d\"\n                                xlinkHref=\"#prefix__c\"\n                            />\n                        </defs>\n                        <g transform=\"translate(-131.196 -134.336)\">\n                            <g transform=\"translate(-442.372 -663.575) scale(4.37185)\">\n                                <circle\n                                    cx={138.339}\n                                    cy={189.655}\n                                    r={7.144}\n                                    fill={bgrColor}\n                                />\n                                <path\n                                    d=\"M138.34 182.511a7.144 7.144 0 00-7.144 7.144 7.144 7.144 0 007.143 7.144 7.144 7.144 0 007.144-7.144 7.144 7.144 0 00-7.144-7.144zm0 .53a6.615 6.615 0 016.614 6.614 6.615 6.615 0 01-6.615 6.614 6.615 6.615 0 01-6.614-6.614 6.615 6.615 0 016.614-6.615z\"\n                                    fill=\"url(#prefix__d)\"\n                                />\n                                <circle\n                                    cx={138.339}\n                                    cy={189.655}\n                                    r={6.35}\n                                    fill=\"#fff\"\n                                />\n                            </g>\n                            <circle\n                                r={14.583}\n                                cy={192.949}\n                                cx={149.253}\n                                fill=\"none\"\n                            />\n                            <circle\n                                cy={165.567}\n                                cx={162.427}\n                                fill=\"#f0f0f0\"\n                                r={27.151}\n                            />\n                        </g>\n                        <g\n                            transform={`translate(${62.463 / 2} ${62.463 /\n                                2}) scale(0.45) rotate(-90)`}\n                        >\n                            {Array.from(new Array(numNotches)).map(\n                                (_, index) => {\n                                    const step = (2 * Math.PI) / numNotches\n                                    const angle = index * step\n                                    const width = 2\n                                    const height = 8\n                                    const x =\n                                        width / 2 + 62.463 * Math.cos(angle)\n                                    const y =\n                                        height / 2 + 62.463 * Math.sin(angle)\n                                    const origX = x - width / 2\n                                    const origY = y - height / 2\n                                    const fill =\n                                        activeNotch > index\n                                            ? activeNotchColor\n                                            : defaultNotchColor\n                                    const key = 'notch_' + index\n                                    return (\n                                        <rect\n                                            key={key}\n                                            id={`r${index}`}\n                                            fill={fill}\n                                            width={width}\n                                            height={height}\n                                            x={x}\n                                            y={y}\n                                            transform={`rotate(${index *\n                                                Math.ceil(360 / numNotches) +\n                                                90} ${origX} ${origY})`}\n                                        />\n                                    )\n                                },\n                            )}\n                        </g>\n                    </svg>\n                    <div\n                        style={{\n                            width: '100%',\n                            textAlign: 'center',\n                            fontSize: `${Math.ceil(props.diameter / 4)}px`,\n                            position: 'absolute',\n                            top: 'calc(50% - 0.6em)',\n                            userSelect: 'none',\n                            color: bgrColor,\n                        }}\n                    >\n                        {props.value}\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinWrap from './layout/SkinWrap'\nimport SkinProps from './SkinProps'\nimport composeTwo from '../util/composeTwo'\n\n/*\n * CSS for this component is written by @simurai\n * All credits goes to him\n * https://codepen.io/simurai/pen/DwJdq\n */\n\nconst uniqClassName = `metal-${new Date().getTime()}`\n\nexport default function Silver(props: SkinProps<{}>): JSX.Element {\n    const [angle, setAngle] = useState(0)\n    const [bgrClass, setBgrClass] = useState(`${uniqClassName}-bgr`)\n\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>(isInteracting => {\n        isInteracting\n            ? setBgrClass(`${uniqClassName}-bgr-active`)\n            : setBgrClass(`${uniqClassName}-bgr`)\n    }, props.onInteractionChange)\n    const glowSpacing = 28\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter + glowSpacing}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <style type=\"text/css\">\n                        {`.${uniqClassName}-bgr, .${uniqClassName}-bgr-active {\n                        position: absolute;\n                        z-index:1;\n                        outline: none;\n\n                        background-color: hsl(0,0%,90%);\n                        box-shadow: inset hsla(0,0%,15%,  1) 0  0px 0px 4px, /* border */\n                        inset hsla(0,0%,15%, .8) 0 -1px 5px 4px, /* soft SD */\n                        inset hsla(0,0%,0%, .25) 0 -1px 0px 7px, /* bottom SD */\n                        inset hsla(0,0%,100%,.7) 0  2px 1px 7px, /* top HL */\n\n                        hsla(0,0%, 0%,.15) 0 -5px 6px 4px, /* outer SD */\n                        hsla(0,0%,100%,.5) 0  5px 6px 4px; /* outer HL */ \n\n                        transition: color .2s;\n                    }\n                    \n                    .${uniqClassName}-bgr-active {\n                        color: hsl(210, 100%, 40%);\n                        text-shadow: hsla(210,100%,20%,.3) 0 -1px 0, hsl(210,100%,85%) 0 2px 1px, hsla(200,100%,80%,1) 0 0 5px, hsla(210,100%,50%,.6) 0 0 20px;\n                        box-shadow: \n                            inset hsla(208, 79%, 28%,  1) 0  0px 0px 4px, /* border */\n                            inset hsla(208,100%,15%, .4) 0 -1px 5px 4px, /* soft SD */\n                            inset hsla(208,100%,20%,.25) 0 -1px 0px 7px, /* bottom SD */\n                            inset hsla(208,100%,100%,.7) 0  2px 1px 7px, /* top HL */\n\n                            hsla(208,100%,75%, .8) 0  0px 3px 2px, /* outer SD */\n                            hsla(208,50%,40%, .25) 0 -5px 6px 4px, /* outer SD */\n                            hsla(208,80%,95%,   1) 0  5px 6px 4px; /* outer HL */\n                    }\n\n                    .${uniqClassName}-rot {\n                        position: absolute;\n                        z-index: 2;\n                        top: 7px;\n                        left: 7px;\n                        background-image: -webkit-radial-gradient(  50%   0%,  8% 50%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\n                        -webkit-radial-gradient(  50% 100%, 12% 50%, hsla(0,0%,100%,.6) 0%, hsla(0,0%,100%,0) 100%),\n                        -webkit-radial-gradient(   0%  50%, 50%  7%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\n                        -webkit-radial-gradient( 100%  50%, 50%  5%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\n\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,  0%,0) 0%, hsla(0,0%,  0%,0)   3%, hsla(0,0%,  0%,.1) 3.5%),\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0)   6%, hsla(0,0%,100%,.1) 7.5%),\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0) 1.2%, hsla(0,0%,100%,.2) 2.2%),\n\n                        -webkit-radial-gradient( 50% 50%, 200% 50%, hsla(0,0%,90%,1) 5%, hsla(0,0%,85%,1) 30%, hsla(0,0%,60%,1) 100%);\n                    }\n\n\n                    .${uniqClassName}-rot:before, .${uniqClassName}-rot:after {\n                        content: \"\";\n                        top: 0;\n                        left: 0;\n                        position: absolute;\n                        width: inherit;\n                        height: inherit;\n                        border-radius: inherit;\n\n                        /* fake conical gradients */\n                        background-image: -webkit-radial-gradient(  50%   0%, 10% 50%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\n                        -webkit-radial-gradient(  50% 100%, 10% 50%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\n                        -webkit-radial-gradient(   0%  50%, 50% 10%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\n                        -webkit-radial-gradient( 100%  50%, 50% 06%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%);\n                    }\n                    .${uniqClassName}-rot:before { transform: rotate( 65deg); }\n                    .${uniqClassName}-rot:after { transform: rotate(-65deg); }\n                    \n                    .${uniqClassName}-notch {\n                        position: absolute;\n                        width: 10px;\n                        height: 10px;\n                        background: black;\n                        border-radius: 5px;\n                        top: 5px;\n                    }\n                    .${uniqClassName}-text {\n                        width: 100%;\n                        text-align: center;\n                        font-weight: bold;\n                        position: absolute;\n                        top: calc(50% - 0.6em);\n                        user-select: none;\n                        z-index: 3;\n                        color: #262626;\n                        text-shadow: -1px -1px 1px #111, 1px 1px 2px #fff;\n                    }`}\n                    </style>\n                    <div\n                        style={{\n                            position: 'relative',\n                            width: props.diameter,\n                            height: props.diameter,\n                            userSelect: 'none',\n                            margin: `${glowSpacing / 2}px 0 0 ${glowSpacing /\n                                2}px`,\n                        }}\n                    >\n                        <div\n                            className={bgrClass}\n                            style={{\n                                width: `${props.diameter}px`,\n                                height: `${props.diameter}px`,\n                                borderRadius: `${props.diameter / 2}px`,\n                            }}\n                        ></div>\n                        <div\n                            className={`${uniqClassName}-rot`}\n                            style={{\n                                width: `${props.diameter - 14}px`,\n                                height: `${props.diameter - 14}px`,\n                                lineHeight: `${props.diameter - 14}px`,\n                                borderRadius: `${(props.diameter - 14) / 2}px`,\n                                transform: `rotate(${angle}deg)`,\n                            }}\n                        >\n                            <div\n                                className={`${uniqClassName}-notch`}\n                                style={{\n                                    left: `${(props.diameter - 24) / 2}px`,\n                                }}\n                            ></div>\n                        </div>\n                        <div\n                            className={`${uniqClassName}-text`}\n                            style={{\n                                fontSize: `${Math.ceil(props.diameter / 4)}px`,\n                            }}\n                        >\n                            {props.value}\n                        </div>\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinProps from './SkinProps'\nimport SkinWrap from './layout/SkinWrap'\nimport composeTwo from '../util/composeTwo'\n\nexport interface DonutTheme {\n    donutColor?: string\n    bgrColor?: string\n    maxedBgrColor?: string\n    centerColor?: string\n    centerFocusedColor?: string\n    donutThickness?: number\n}\n\n/*\n * CSS for this component is written by @Hyungsub\n * All credits goes to him\n * https://codepen.io/Hyungsub08/pen/yLBPJKW\n */\n\nconst uniqClassName = `donut-${new Date().getTime()}`\n\nexport default function Donut(props: SkinProps<DonutTheme>): JSX.Element {\n    const [angle, setAngle] = useState(0)\n    const [centerClass, setCenterClass] = useState(`${uniqClassName}-center`)\n\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>(isInteracting => {\n        isInteracting\n            ? setCenterClass(`${uniqClassName}-center-active`)\n            : setCenterClass(`${uniqClassName}-center`)\n    }, props.onInteractionChange)\n\n    const theme = props.theme || {}\n\n    const donutColor = theme.donutColor || '#1BA098'\n    const defaultBgrColor = theme.bgrColor || '#e1e1e1'\n    const maxedBgrColor = theme.maxedBgrColor || '#051622'\n    const centerColor = theme.centerColor || '#fff'\n    const centerFocusedColor = theme.centerFocusedColor || '#F7F4E9'\n    const donutThickness = theme.donutThickness || 30\n\n    let bgrColor = defaultBgrColor\n    if (props.value === props.max) {\n        bgrColor = maxedBgrColor\n    }\n    let colorBgr = bgrColor\n    let colorOne = donutColor\n    let colorTwo = donutColor\n    let angleOne = 90\n    let angleTwo = angle\n\n    if (angle < 180) {\n        colorBgr = donutColor\n        colorOne = bgrColor\n        colorTwo = bgrColor\n        angleOne = angle + 90\n        angleTwo = 0\n    }\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <style type=\"text/css\">\n                        {`.${uniqClassName} {\n                      position: relative;\n                      border-radius: 50%;\n                      overflow: hidden;\n                    }\n                    .${uniqClassName}-slice-one, .${uniqClassName}-slice-two {\n                      position: absolute;\n                      top: 0;\n                      left: 0;\n                      width: 100%;\n                      height: 100%;\n                    }\n                    .${uniqClassName}-center, .${uniqClassName}-center-active {\n                      position: absolute;\n                      border-radius: 50%;\n                    }\n                    .${uniqClassName}-center {\n                      background: ${centerColor};\n                    }\n                    .${uniqClassName}-center-active {\n                      background: ${centerFocusedColor};\n                    }\n                    .${uniqClassName}-center span {\n                      display: block;\n                      text-align: center;\n                    }\n                    .${uniqClassName}-text {\n                        width: 100%;\n                        text-align: center;\n                        font-weight: bold;\n                        position: absolute;\n                        top: calc(50% - 0.6em);\n                        user-select: none;\n                        z-index: 3;\n                    }`}\n                    </style>\n                    <div\n                        style={{\n                            position: 'relative',\n                            width: props.diameter,\n                            height: props.diameter,\n                            userSelect: 'none',\n                        }}\n                    >\n                        <div\n                            className={uniqClassName}\n                            style={{\n                                width: `${props.diameter}px`,\n                                height: `${props.diameter}px`,\n                                background: colorBgr,\n                            }}\n                        >\n                            <div\n                                className={`${uniqClassName}-slice-one`}\n                                style={{\n                                    clip: `rect(0 ${\n                                        props.diameter\n                                    }px ${props.diameter / 2}px 0)`,\n                                    transform: `rotate(${angleOne}deg)`,\n                                    background: colorOne,\n                                }}\n                            ></div>\n                            <div\n                                className={`${uniqClassName}-slice-two`}\n                                style={{\n                                    clip: `rect(0 ${props.diameter / 2}px ${\n                                        props.diameter\n                                    }px 0)`,\n                                    transform: `rotate(${angleTwo}deg)`,\n                                    background: colorTwo,\n                                }}\n                            ></div>\n                            <div\n                                className={centerClass}\n                                style={{\n                                    top: `${donutThickness}px`,\n                                    left: `${donutThickness}px`,\n                                    width: `${props.diameter -\n                                        donutThickness * 2}px`,\n                                    height: `${props.diameter -\n                                        donutThickness * 2}px`,\n                                }}\n                            ></div>\n                        </div>\n                        <div\n                            className={`${uniqClassName}-text`}\n                            style={{\n                                color: donutColor,\n                                fontSize: `${Math.ceil(props.diameter / 4)}px`,\n                            }}\n                        >\n                            {props.value}\n                        </div>\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}