{"ast":null,"code":"var _jsxFileName = \"/home/william/COMPOUNDERGUI/CompounderGUI/src/components/common/widgets/EarningReport.js\";\nimport React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nclass EarningReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [{\n        name: 'Income',\n        data: [11, 8, 15, 18, 19, 17]\n      }, {\n        name: 'Growth',\n        data: [8, 7, 11, 11, 4, 8]\n      }, {\n        name: 'Expense',\n        data: [8, 9, 8, 10, 12, 14]\n      }],\n      options: {\n        chart: {\n          type: 'bar',\n          height: 302,\n          toolbar: {\n            show: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          width: 16,\n          bottom: 20,\n          top: 0,\n          colors: ['#3e6aa7', '#50960c', '#f66d9b']\n        },\n        xaxis: {\n          axisBorder: {\n            show: false\n          },\n          categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun']\n        },\n        yaxis: {\n          title: {\n            text: '$ (thousands)'\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        tooltip: {\n          y: {\n            formatter: function (val) {\n              return \"$ \" + val + \" thousands\";\n            }\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"bar\",\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default EarningReport;","map":{"version":3,"sources":["/home/william/COMPOUNDERGUI/CompounderGUI/src/components/common/widgets/EarningReport.js"],"names":["React","Component","ReactApexChart","EarningReport","constructor","props","state","series","name","data","options","chart","type","height","toolbar","show","dataLabels","enabled","stroke","width","bottom","top","colors","xaxis","axisBorder","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","val","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAClCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,CAAC;AACLC,QAAAA,IAAI,EAAE,QADD;AAELC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB;AAFD,OAAD,EAGL;AACCD,QAAAA,IAAI,EAAE,QADP;AAECC,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,CAAf,EAAkB,CAAlB;AAFP,OAHK,EAML;AACCD,QAAAA,IAAI,EAAE,SADP;AAECC,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB;AAFP,OANK,CADC;AAWTC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,KADH;AAEHC,UAAAA,MAAM,EAAE,GAFL;AAGHC,UAAAA,OAAO,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD;AAHN,SADF;AASLC,QAAAA,UAAU,EAAE;AACRC,UAAAA,OAAO,EAAE;AADD,SATP;AAYLC,QAAAA,MAAM,EAAE;AACJH,UAAAA,IAAI,EAAE,IADF;AAEJI,UAAAA,KAAK,EAAE,EAFH;AAGJC,UAAAA,MAAM,EAAE,EAHJ;AAIJC,UAAAA,GAAG,EAAE,CAJD;AAKJC,UAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB;AALJ,SAZH;AAmBLC,QAAAA,KAAK,EAAE;AACHC,UAAAA,UAAU,EAAE;AAAET,YAAAA,IAAI,EAAE;AAAR,WADT;AAEHU,UAAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B;AAFT,SAnBF;AAuBLC,QAAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAE;AACHC,YAAAA,IAAI,EAAE;AADH;AADJ,SAvBF;AA4BLC,QAAAA,IAAI,EAAE;AACFC,UAAAA,OAAO,EAAE;AADP,SA5BD;AA+BLC,QAAAA,OAAO,EAAE;AACLC,UAAAA,CAAC,EAAE;AACCC,YAAAA,SAAS,EAAE,UAAUC,GAAV,EAAe;AACtB,qBAAO,OAAOA,GAAP,GAAa,YAApB;AACH;AAHF;AADE;AA/BJ;AAXA,KAAb;AAmDH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,cAAD;AACI,MAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWI,OADxB;AAEI,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC,MAFvB;AAGI,MAAA,IAAI,EAAC,KAHT;AAII,MAAA,MAAM,EAAE,GAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH;;AAjEiC;;AAoEtC,eAAeJ,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nclass EarningReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            series: [{\r\n                name: 'Income',\r\n                data: [11, 8, 15, 18, 19, 17]\r\n            }, {\r\n                name: 'Growth',\r\n                data: [8, 7, 11, 11, 4, 8]\r\n            }, {\r\n                name: 'Expense',\r\n                data: [8, 9, 8, 10, 12, 14]\r\n            }],\r\n            options: {\r\n                chart: {\r\n                    type: 'bar',\r\n                    height: 302,\r\n                    toolbar: {\r\n                        show: false\r\n                    }\r\n                },\r\n\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 16,\r\n                    bottom: 20,\r\n                    top: 0,\r\n                    colors: ['#3e6aa7', '#50960c', '#f66d9b']\r\n                },\r\n                xaxis: {\r\n                    axisBorder: { show: false },\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n                },\r\n                yaxis: {\r\n                    title: {\r\n                        text: '$ (thousands)'\r\n                    }\r\n                },\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                tooltip: {\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$ \" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <ReactApexChart\r\n                options={this.state.options}\r\n                series={this.state.series}\r\n                type=\"bar\"\r\n                height={300}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EarningReport;\r\n"]},"metadata":{},"sourceType":"module"}